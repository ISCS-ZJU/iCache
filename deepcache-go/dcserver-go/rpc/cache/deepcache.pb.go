// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.1
// source: deepcache.proto

package cache

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Operation type
type OpType int32

const (
	// dc oprations
	OpType_get_cache_info           OpType = 0 // cache info op;
	OpType_readimg_byidx            OpType = 1 // reading by index op
	OpType_update_ivpersample       OpType = 2 // update important value op
	OpType_readimg_byidx_t          OpType = 3 // reading by index_tuple, (imgidx, 1/0), for isa
	OpType_refresh_server_ivpsample OpType = 4 // refresh server ivpersample
)

// Enum value maps for OpType.
var (
	OpType_name = map[int32]string{
		0: "get_cache_info",
		1: "readimg_byidx",
		2: "update_ivpersample",
		3: "readimg_byidx_t",
		4: "refresh_server_ivpsample",
	}
	OpType_value = map[string]int32{
		"get_cache_info":           0,
		"readimg_byidx":            1,
		"update_ivpersample":       2,
		"readimg_byidx_t":          3,
		"refresh_server_ivpsample": 4,
	}
)

func (x OpType) Enum() *OpType {
	p := new(OpType)
	*p = x
	return p
}

func (x OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_deepcache_proto_enumTypes[0].Descriptor()
}

func (OpType) Type() protoreflect.EnumType {
	return &file_deepcache_proto_enumTypes[0]
}

func (x OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpType.Descriptor instead.
func (OpType) EnumDescriptor() ([]byte, []int) {
	return file_deepcache_proto_rawDescGZIP(), []int{0}
}

// Request structure
type DCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // id
	Type       OpType `protobuf:"varint,2,opt,name=type,proto3,enum=rpc.OpType" json:"type,omitempty"`               // op
	Imgidx     int64  `protobuf:"varint,3,opt,name=imgidx,proto3" json:"imgidx,omitempty"`                           // image index
	KvlistJson string `protobuf:"bytes,4,opt,name=kvlist_json,json=kvlistJson,proto3" json:"kvlist_json,omitempty"`  // kvlist for update_ivpersample
	ImgidxT    string `protobuf:"bytes,5,opt,name=imgidx_t,json=imgidxT,proto3" json:"imgidx_t,omitempty"`           // imgidx_t for readimg_byidx_t
	FullAccess bool   `protobuf:"varint,6,opt,name=full_access,json=fullAccess,proto3" json:"full_access,omitempty"` // if access all data in this epoch
}

func (x *DCRequest) Reset() {
	*x = DCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deepcache_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DCRequest) ProtoMessage() {}

func (x *DCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deepcache_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DCRequest.ProtoReflect.Descriptor instead.
func (*DCRequest) Descriptor() ([]byte, []int) {
	return file_deepcache_proto_rawDescGZIP(), []int{0}
}

func (x *DCRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DCRequest) GetType() OpType {
	if x != nil {
		return x.Type
	}
	return OpType_get_cache_info
}

func (x *DCRequest) GetImgidx() int64 {
	if x != nil {
		return x.Imgidx
	}
	return 0
}

func (x *DCRequest) GetKvlistJson() string {
	if x != nil {
		return x.KvlistJson
	}
	return ""
}

func (x *DCRequest) GetImgidxT() string {
	if x != nil {
		return x.ImgidxT
	}
	return ""
}

func (x *DCRequest) GetFullAccess() bool {
	if x != nil {
		return x.FullAccess
	}
	return false
}

// Return structure
type DCReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // id
	// !important, data should not contains data longer than 2^32 (4GB)
	Data      []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                             // binary
	Len       int64  `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`                              // data length
	Msg       string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`                               // string
	Clsidx    int64  `protobuf:"varint,5,opt,name=clsidx,proto3" json:"clsidx,omitempty"`                        // clsidx
	Imgidx    int64  `protobuf:"varint,6,opt,name=imgidx,proto3" json:"imgidx,omitempty"`                        // imgidx
	CacheSize int64  `protobuf:"varint,7,opt,name=cache_size,json=cacheSize,proto3" json:"cache_size,omitempty"` // cache_size
	Nsamples  int64  `protobuf:"varint,8,opt,name=nsamples,proto3" json:"nsamples,omitempty"`                    // nsamples
	IsHit     bool   `protobuf:"varint,9,opt,name=is_hit,json=isHit,proto3" json:"is_hit,omitempty"`             // cache hit or not, used to tell if using "pil cache" to accelerate bytes2pil
}

func (x *DCReply) Reset() {
	*x = DCReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deepcache_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DCReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DCReply) ProtoMessage() {}

func (x *DCReply) ProtoReflect() protoreflect.Message {
	mi := &file_deepcache_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DCReply.ProtoReflect.Descriptor instead.
func (*DCReply) Descriptor() ([]byte, []int) {
	return file_deepcache_proto_rawDescGZIP(), []int{1}
}

func (x *DCReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DCReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DCReply) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *DCReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DCReply) GetClsidx() int64 {
	if x != nil {
		return x.Clsidx
	}
	return 0
}

func (x *DCReply) GetImgidx() int64 {
	if x != nil {
		return x.Imgidx
	}
	return 0
}

func (x *DCReply) GetCacheSize() int64 {
	if x != nil {
		return x.CacheSize
	}
	return 0
}

func (x *DCReply) GetNsamples() int64 {
	if x != nil {
		return x.Nsamples
	}
	return 0
}

func (x *DCReply) GetIsHit() bool {
	if x != nil {
		return x.IsHit
	}
	return false
}

var File_deepcache_proto protoreflect.FileDescriptor

var file_deepcache_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x65, 0x65, 0x70, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x44, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x69, 0x64, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x69, 0x64, 0x78, 0x12, 0x1f, 0x0a,
	0x0b, 0x6b, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6b, 0x76, 0x6c, 0x69, 0x73, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x6d, 0x67, 0x69, 0x64, 0x78, 0x5f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x6d, 0x67, 0x69, 0x64, 0x78, 0x54, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x66, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x07, 0x44,
	0x43, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6c, 0x73, 0x69, 0x64, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6c, 0x73, 0x69, 0x64, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x69, 0x64, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x69, 0x64, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f,
	0x68, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x69, 0x74,
	0x2a, 0x7a, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x5f, 0x62, 0x79, 0x69, 0x64, 0x78, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x76, 0x70, 0x65,
	0x72, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6d, 0x67, 0x5f, 0x62, 0x79, 0x69, 0x64, 0x78, 0x5f, 0x74, 0x10, 0x03, 0x12, 0x1c,
	0x0a, 0x18, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x76, 0x70, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x10, 0x04, 0x32, 0x36, 0x0a, 0x08,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x44, 0x43, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x43, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deepcache_proto_rawDescOnce sync.Once
	file_deepcache_proto_rawDescData = file_deepcache_proto_rawDesc
)

func file_deepcache_proto_rawDescGZIP() []byte {
	file_deepcache_proto_rawDescOnce.Do(func() {
		file_deepcache_proto_rawDescData = protoimpl.X.CompressGZIP(file_deepcache_proto_rawDescData)
	})
	return file_deepcache_proto_rawDescData
}

var file_deepcache_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_deepcache_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_deepcache_proto_goTypes = []interface{}{
	(OpType)(0),       // 0: rpc.OpType
	(*DCRequest)(nil), // 1: rpc.DCRequest
	(*DCReply)(nil),   // 2: rpc.DCReply
}
var file_deepcache_proto_depIdxs = []int32{
	0, // 0: rpc.DCRequest.type:type_name -> rpc.OpType
	1, // 1: rpc.Operator.DCSubmit:input_type -> rpc.DCRequest
	2, // 2: rpc.Operator.DCSubmit:output_type -> rpc.DCReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_deepcache_proto_init() }
func file_deepcache_proto_init() {
	if File_deepcache_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deepcache_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deepcache_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DCReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deepcache_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deepcache_proto_goTypes,
		DependencyIndexes: file_deepcache_proto_depIdxs,
		EnumInfos:         file_deepcache_proto_enumTypes,
		MessageInfos:      file_deepcache_proto_msgTypes,
	}.Build()
	File_deepcache_proto = out.File
	file_deepcache_proto_rawDesc = nil
	file_deepcache_proto_goTypes = nil
	file_deepcache_proto_depIdxs = nil
}
